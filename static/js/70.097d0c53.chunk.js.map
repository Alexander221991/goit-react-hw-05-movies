{"version":3,"file":"static/js/70.097d0c53.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/BackBtn/BackBtn.module.css?2b72","components/BackBtn/BackBtn.jsx","webpack://react-homework-template/./src/components/Error/Error.module.css?141d","components/Error/Error.jsx","webpack://react-homework-template/./src/components/MovieDetailsContent/AddContent/Cast/Cast.module.css?b726","components/MovieDetailsContent/AddContent/Cast/CastList.jsx","components/MovieDetailsContent/AddContent/Cast/Cast.jsx","services/config.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie_goback_btn\":\"BackBtn_movie_goback_btn__GYAh9\"};","import { Link, useLocation } from 'react-router-dom';\n\nimport css from './BackBtn.module.css';\n\nconst BackBtn = () => {\n  const location = useLocation();\n  const comeback =\n    location.state && location.state.from ? location.state.from : '/';\n  return (\n    <Link to={comeback} className={css.movie_goback_btn}>\n      Go back\n    </Link>\n  );\n};\n\nexport default BackBtn;\n","// extracted by mini-css-extract-plugin\nexport default {\"header_error\":\"Error_header_error__8xhVO\",\"description_error\":\"Error_description_error__n-HWJ\"};","import BackBtn from 'components/BackBtn/BackBtn';\nimport css from './Error.module.css';\nconst Error = ({ message }) => {\n  return (\n    <>\n      <BackBtn />\n      <h2 className={css.header_error}>\n        Opps something went wrong! Try reloading the page\n      </h2>\n      <p className={css.description_error}>{message}</p>\n    </>\n  );\n};\n\nexport default Error;\n","// extracted by mini-css-extract-plugin\nexport default {\"cast_title\":\"Cast_cast_title__mcWWD\",\"cast_list\":\"Cast_cast_list__kNjy0\",\"cast_item\":\"Cast_cast_item__A27-z\",\"cast_img\":\"Cast_cast_img__P-7k3\",\"cast_info\":\"Cast_cast_info__m0Jme\"};","import css from './Cast.module.css';\n\nconst CastList = ({ cast }) => {\n  const BASE_IMG = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <>\n      <h2 className={css.cast_title}>Cast:</h2>\n      {cast.length ? (\n        <ul className={css.cast_list}>\n          {cast.map(({ id, name, profile_path, character }) => (\n            <li key={id} className={css.cast_item}>\n              <img\n                className={css.cast_img}\n                src={BASE_IMG + profile_path}\n                alt={name}\n                loading=\"lazy\"\n              />\n              <p className={css.cast_info}>\n                <b>Name:</b> {name}\n              </p>\n              <p className={css.cast_info}>\n                <b>Character:</b> {character}\n              </p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <h2>Cast information will be available soon</h2>\n      )}\n    </>\n  );\n};\n\nexport default CastList;\n","import STATUS from 'services/config';\nimport { Notify } from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Error from 'components/Error/Error';\nimport Loader from 'components/Loader/Loader';\nimport CastList from './CastList';\nimport { getCurrentCast } from 'services/movies-api';\n\nconst Cast = () => {\n  const [status, setStatus] = useState('');\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setStatus(STATUS.PENDING);\n\n    const fetchCast = async () => {\n      const response = await getCurrentCast(movieId);\n      try {\n        setStatus(STATUS.RESOLVED);\n        setCast(response.cast);\n      } catch (error) {\n        setStatus(STATUS.REJECTED);\n        Notify.failure('Oops something went wrong! Try reloading the page');\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {status === STATUS.RESOLVED && <CastList cast={cast} />}\n      {status === STATUS.PENDING && <Loader />}\n      {status === STATUS.REJECTED && (\n        <Error message=\"Load failed details of movie\" />\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\nexport default STATUS;\n"],"names":["location","useLocation","comeback","state","from","_jsx","Link","to","className","css","children","_ref","message","_jsxs","_Fragment","BackBtn","cast","length","map","_ref2","id","name","profile_path","character","src","alt","loading","_useState","useState","_useState2","_slicedToArray","status","setStatus","_useState3","_useState4","setCast","movieId","useParams","useEffect","STATUS","fetchCast","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","getCurrentCast","sent","error","Notify","stop","apply","arguments","CastList","Loader","Error","IDLE","PENDING","REJECTED","RESOLVED"],"sourceRoot":""}